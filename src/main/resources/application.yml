spring:
  datasource:
    url: ${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5433/bluepay}
    username: ${JDBC_DATABASE_USERNAME:postgres}
    password: ${JDBC_DATABASE_PASSWORD:020775Rashy!}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuer-uri: ${ISSUER_URI:http://localhost:8080/realms/justjavarealm}
            # user-name-attribute: preferred_username
        registration:
          keycloak-oidc:
            provider: keycloak
            client-name: BluePay
            client-id: bluepay
            client-secret: ${CLIENT-SECRET:3rXI9p0LcG7jgst5LwrdxAso28j9Dlfj}
            authorization-grant-type: authorization_code
            scope: openid,profile,email
            #redirect-uri:http://coaching-app-test-alb-222659239.us-east-1.elb.amazonaws.com/
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: true
  mvc:
    format:
      date: yyyy-MM-dd
      date-time: yyyy-MM-dd'T'HH:mm:ss
      time: HH:mm:ss
  docker:
    compose:
      lifecycle-management: start-only
  mail:
    host: mail.justjava.com.ng
    port: 587
    username: akinrinde@justjava.com.ng
    password: 020775Rashy!
    properties:
      mail:
        smtp:
          auth: true
    default-encoding: UTF-8
#  kafka:
#    bootstrap-servers: localhost:9092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
  devtools:
    restart:
      enabled: true

error:
  handling:
    http-status-in-json-response: true
    exception-logging: NO_LOGGING
    full-stacktrace-http-statuses: 5xx
    log-levels:
      5xx: ERROR
    codes:
      ProductCodeUnique: PRODUCT_CODE_UNIQUE
      ServiceCodeUnique: SERVICE_CODE_UNIQUE
      CustomerEmailUnique: CUSTOMER_EMAIL_UNIQUE
      TransactionReferenceUnique: TRANSACTION_REFERENCE_UNIQUE
      TransactionExternalReferenceUnique: TRANSACTION_EXTERNAL_REFERENCE_UNIQUE
      TransactionSourceAccountUnique: TRANSACTION_SOURCE_ACCOUNT_UNIQUE
springdoc:
  pathsToMatch: /api/**
server:
  port: 9090


flowable:
  http:
    enabled: true
  eventregistry:
    enabled: true
    resource-location: "classpath*:/eventregistries/"
